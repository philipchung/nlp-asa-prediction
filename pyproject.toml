[tool.poetry]
name = "presurgnlp"
version = "0.2.0"
description = "ASA Physical Status prediction from clinical text"
authors = ["Philip Chung"]
readme = "README.md"
packages = [{ include = "./src"}, { include = "./models"}]

[tool.poetry.dependencies]
python = "^3.8"
numpy = "^1.23.4"
pandas = "^1.5.1"
scipy = "^1.9.3"
torch = "^1.12.1"
torchvision = "^0.13.1"
torchaudio = "^0.12.1"
scikit-learn = "1.1.3"
shap = "^0.41.0"
jupyter = "^1.0.0"
ipykernel = "^6.16.2"
ipywidgets = "^7.7.0"
pyarrow = "^10.0.0"
python-snappy = "^0.6.1"
transformers = "^4.23.1"
tokenizers = "^0.13.1"
datasets = "~2.5.0"
knockknock = "^0.1.8.1"
pytorch-lightning = "1.8.3"
torchmetrics = "^0.10.1"
mlflow = "^2.3.0"
hydra-core = "^1.2.0"
ray = {version = ">=1.13,<2.0", extras = ["tune"]}
flaml = {version = "^1.0.0", extras = ["blendsearch", "ray"]}
tqdm = "^4.63.0"
sqlalchemy = "^1.4.42"
rich = "^12.6.0"
matplotlib = "^3.1.0"
seaborn = "^0.12.1"
plotly = "^5.11.0"
azureml-core = "^1.47.0"
azureml-mlflow = "^1.47.0"
azure-ai-ml = "^1.0.0"
fasttext-wheel = "^0.9.2"
poethepoet = "^0.16.4"
statsmodels = "^0.14.0"

[tool.poetry.group.dev.dependencies]
flake8 = "^5.0.4"
pylint = "^2.14.0"
black = "^22.10.0"
nvitop = "^0.10.1"


[tool.poe.tasks]
force-pytorch-cuda113 = "pip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu113"
install-ray-tune210 = "pip install -U 'ray[tune]'==2.1.0"
install-colossal-ai = "pip install colossalai==0.1.10+torch1.12cu11.3 -f https://release.colossalai.org"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.ruff]
ignore = []
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
# Same as Black.
line-length = 100
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "google"